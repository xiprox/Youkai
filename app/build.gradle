apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.triplet.play'

def versionMajor = 0
def versionMinor = 0
def versionPatch = 0
def versionBuild = Integer.parseInt(System.getenv('TRAVIS_BUILD_NUMBER') ?: "1")

def keystoreAlias = System.getenv('keystoreAlias') ?: project.property("signing.upload.alias")
def keystorePassword = System.getenv('keystorePassword') ?: project.property("signing.upload.password")

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    playAccountConfigs {
        defaultAccountConfig {
            serviceAccountEmail = 'youkai-publish@api-7655273526229553849-892363.iam.gserviceaccount.com'
            pk12File = file('../key.p12')
        }
    }

    defaultConfig {
        applicationId "app.youkai"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        playAccountConfig = playAccountConfigs.defaultAccountConfig
    }

    signingConfigs {
        release {
            storeFile file("../keystore-upload.jks")
            storePassword keystorePassword
            keyAlias keystoreAlias
            keyPassword keystorePassword
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        test.resources.srcDirs += ['src/test/resources']
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    /* Any jar files */
    compile fileTree(dir: 'libs', include: ['*.jar'])

    /* Kotlin */
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    /* Testing */
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile 'com.squareup.okhttp3:mockwebserver:3.6.0'

    /* App dependencies ------------------------------------------------------------------------- */

    /* LeakCanary */
    debugCompile "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"

    /* Support Libraries */
    compile "com.android.support:appcompat-v7:$support_lib_version"
    compile "com.android.support:cardview-v7:$support_lib_version"
    compile "com.android.support:recyclerview-v7:$support_lib_version"
    compile "com.android.support:design:$support_lib_version"
    compile "com.android.support:palette-v7:$support_lib_version"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.google.android:flexbox:0.2.5'

    /* Mosby / MVP */
    compile 'com.hannesdorfmann.mosby:viewstate:2.0.1'

    /* Retrofit and JSON */
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile "com.squareup.retrofit2:retrofit:$retrofit_version"
    compile 'com.squareup.retrofit2:converter-jackson:2.2.0'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.6'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.6'
    /* compile 'com.github.jasminb:jsonapi-converter:0.7' */
    compile('com.github.Kevinrob:jsonapi-converter:090d7a89426c4765ea08edb655d5c0aa7e3c7d5d'){
        changing=true
    }

    /* Picasso */
    compile 'com.squareup.picasso:picasso:2.5.2'

    /* Rx */
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.0.6'
    compile 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.0.0'

    /* Fresco / Image Loading */
    compile 'com.facebook.fresco:fresco:1.1.0'
    compile 'com.facebook.fresco:animated-gif:1.1.0'

    /* RatingBar */
    compile 'me.zhanghai.android.materialratingbar:library:1.0.2'
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}